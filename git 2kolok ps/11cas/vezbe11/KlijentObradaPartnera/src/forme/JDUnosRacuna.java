/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import forme.modeltabele.ProizvodiTableModel;
import domen.PoslovniPartner;
import domen.Proizvod;
import domen.Racun;
import forme.modeltabele.StavkaRacunaTableModel;
import izuzetak.ValidationException;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import komunikacija.Komunikacija;
import transfer.OdgovorServera;
import transfer.ZahtevKlienta;
//import poslovnaLogika.KontrolerPL;

/**
 *
 * @author student
 */
public class JDUnosRacuna extends javax.swing.JDialog {

    /**
     * Creates new form JDUnosRacuna
     */
    public JDUnosRacuna(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        srediFormu();
    }

    Proizvod izabraniProizvod;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBrojRacuna = new javax.swing.JTextField();
        txtDatum = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtUkupno = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbPartneri = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStavkeRacuna = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProizvodi = new javax.swing.JTable();
        txtFilterProizvoda = new javax.swing.JTextField();
        btnObrisiStavku = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbProizvod = new javax.swing.JLabel();
        txtKolicina = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnDodaj = new javax.swing.JButton();
        btnDodajProizvod = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Broj racuna: *");

        txtBrojRacuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBrojRacunaActionPerformed(evt);
            }
        });

        jLabel2.setText("Datum:  *");

        txtUkupno.setEditable(false);

        jLabel3.setText("Ukupno:");

        jLabel4.setText("Partner: *");

        tblStavkeRacuna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblStavkeRacuna);

        tblProizvodi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblProizvodi);

        txtFilterProizvoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFilterProizvodaActionPerformed(evt);
            }
        });
        txtFilterProizvoda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFilterProizvodaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFilterProizvodaKeyTyped(evt);
            }
        });

        btnObrisiStavku.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnObrisiStavku.setText("-");
        btnObrisiStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiStavkuActionPerformed(evt);
            }
        });

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Stavka racuna"));

        lbProizvod.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbProizvod.setText("<Proizvod nije izabran>");

        txtKolicina.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtKolicina.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setText("Kolicina:");

        btnDodaj.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDodaj.setText("+");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDodaj))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lbProizvod, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lbProizvod, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDodaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnDodajProizvod.setText("izaberi");
        btnDodajProizvod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajProizvodActionPerformed(evt);
            }
        });

        jLabel6.setText("Filter:");

        jLabel7.setText("(dd.MM.yyyy)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtBrojRacuna, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(txtUkupno, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(btnSacuvaj))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbPartneri, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtFilterProizvoda, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnDodajProizvod))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnObrisiStavku)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel1))
                            .addComponent(txtBrojRacuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel7)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel3))
                            .addComponent(txtUkupno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel4))
                            .addComponent(cbPartneri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDodajProizvod, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtFilterProizvoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(3, 3, 3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnObrisiStavku)
                        .addGap(127, 127, 127)))
                .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtFilterProizvodaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilterProizvodaKeyTyped
        // TODO add your handling code here:


    }//GEN-LAST:event_txtFilterProizvodaKeyTyped

    private void txtFilterProizvodaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilterProizvodaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            System.out.println("RADIM FILTRIRANJE");
            String queryStr = txtFilterProizvoda.getText().trim();
            ProizvodiTableModel ptm = (ProizvodiTableModel) tblProizvodi.getModel();
            ptm.fltrirajProizvode(queryStr);
        }
    }//GEN-LAST:event_txtFilterProizvodaKeyPressed

    private void btnDodajProizvodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajProizvodActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Promenjen je kod. Selekcija proizvoda se vrsi pri selekciji reda u tabeli. Pogledajte metodu private void postaviOsluskivacNaTabeli()", "ISKLJUCENA OPCIJA", JOptionPane.ERROR_MESSAGE);
        /*
        ProizvodiTableModel ptm = (ProizvodiTableModel) tblProizvodi.getModel();
        int selektovaniRed = tblProizvodi.getSelectedRow();
        if (selektovaniRed >= 0) {
            izabraniProizvod = ptm.vratiProizvod(selektovaniRed);
            lbProizvod.setText(izabraniProizvod.getNaziv());
        }
         */

    }//GEN-LAST:event_btnDodajProizvodActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        // TODO add your handling code here:
        try {
            if (izabraniProizvod == null) {
                JOptionPane.showMessageDialog(rootPane, "Morate prvo izabrati proizvod", "", JOptionPane.ERROR_MESSAGE);
            } else {
                StavkaRacunaTableModel srtm = (StavkaRacunaTableModel) tblStavkeRacuna.getModel();
                srtm.dodajStavku(izabraniProizvod, Double.parseDouble(txtKolicina.getText()));
                lbProizvod.setText("<Proizvod nije izabran>");
                izabraniProizvod = null;
                tblProizvodi.clearSelection();
//                txtKolicina.remov                    
                txtKolicina.setBorder(defaultTxtBorder);
            }

        } catch (NumberFormatException nfe) {
                txtKolicina.setBorder(BorderFactory.createLineBorder(Color.red));
                JOptionPane.showMessageDialog(rootPane, "Morate ispravno uneti kolicinu!!!", "", JOptionPane.ERROR_MESSAGE);
                
        }


    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        try {
            // TODO add your handling code here:
            StavkaRacunaTableModel srtm = (StavkaRacunaTableModel) tblStavkeRacuna.getModel();
            Racun r = srtm.getRacun();
            validirajINapuniPodatke(r);
            /*  TODO : KAO STO JE NAPISANO U METODI ValidirajINapuniPodatke ovde treba prikazati poruku koja obuhvata sve validacione greske koje su se desile. */
            
            //KontrolerPL.vratiInstancu().sacuvajRacun(r);
            JOptionPane.showMessageDialog(rootPane, "USPESNO JE SACUVAN RACUN!", "", JOptionPane.INFORMATION_MESSAGE);
            
            /*  TODO : NAPRAVITE METODU KOJA CE OCISTITI PODATKE SA FORME !!! */
            
        } catch (ValidationException ex) {
            //Logger.getLogger(JDUnosRacuna.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "GRESKA:"+ex.getMessage(), "CUVANJE RACUNA", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {            
            JOptionPane.showMessageDialog(rootPane, "GRESKA:"+ex.getMessage(), "CUVANJE RACUNA", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(JDUnosRacuna.class.getName()).log(Level.SEVERE, null, ex);
        }
          
        

    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void txtBrojRacunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBrojRacunaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBrojRacunaActionPerformed

    private void btnObrisiStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiStavkuActionPerformed
        // TODO add your handling code here:
         StavkaRacunaTableModel srtm = (StavkaRacunaTableModel) tblStavkeRacuna.getModel();
         int red = tblStavkeRacuna.getSelectedRow();
         if (red>=0){
           srtm.obrisiStavku(red);
         } else {
             JOptionPane.showMessageDialog(rootPane, "MORATE IZABRATI STAVKU PRE BRISANJA", "BRISANJE STAVKE", JOptionPane.ERROR_MESSAGE); 
         }
    }//GEN-LAST:event_btnObrisiStavkuActionPerformed

    private void txtFilterProizvodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFilterProizvodaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFilterProizvodaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDUnosRacuna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDUnosRacuna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDUnosRacuna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDUnosRacuna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDUnosRacuna dialog = new JDUnosRacuna(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnDodajProizvod;
    private javax.swing.JButton btnObrisiStavku;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cbPartneri;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbProizvod;
    private javax.swing.JTable tblProizvodi;
    private javax.swing.JTable tblStavkeRacuna;
    private javax.swing.JTextField txtBrojRacuna;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtFilterProizvoda;
    private javax.swing.JTextField txtKolicina;
    private javax.swing.JTextField txtUkupno;
    // End of variables declaration//GEN-END:variables

    Border defaultTxtBorder;
    Border defaultCBBorder;
    
    private void srediFormu() {

        try {
            defaultTxtBorder = txtKolicina.getBorder();
            defaultCBBorder = cbPartneri.getBorder();
            
            ZahtevKlienta zahtev = new ZahtevKlienta();
            zahtev.setOperacija(ZahtevKlienta.VRATI_SVE_PROIZVODE);
            Komunikacija.vratiInstancu().posaljiZahtev(zahtev);
            OdgovorServera odgovor = Komunikacija.vratiInstancu().procitajOdgovor();
            if(odgovor.getSignal()==-1){
                throw odgovor.getIzuzetak();
            }
            List<Proizvod> listaProizvoda = (List<Proizvod>) odgovor.getObjekatIzvrsenjaOperacije();
            
            //ProizvodiTableModel ptm = new ProizvodiTableModel(KontrolerPL.vratiInstancu().vratiSveProizvode());
            ProizvodiTableModel ptm = new ProizvodiTableModel(listaProizvoda);
            tblProizvodi.setModel(ptm);
            postaviOsluskivacNaTabeli();

            
            zahtev = new ZahtevKlienta();
            zahtev.setOperacija(ZahtevKlienta.VRATI_SVE_POSLOVNE_PARTNERE);
            Komunikacija.vratiInstancu().posaljiZahtev(zahtev);
            odgovor = Komunikacija.vratiInstancu().procitajOdgovor();
            if(odgovor.getSignal()==-1){
                throw odgovor.getIzuzetak();
            }
            
            //List<PoslovniPartner> listaPartnera = KontrolerPL.vratiInstancu().vratiSvePartnere();

            List<PoslovniPartner> listaPartnera = (List<PoslovniPartner>) odgovor.getObjekatIzvrsenjaOperacije();
            cbPartneri.removeAllItems();

            for (int i = 0; i < listaPartnera.size(); i++) {
                PoslovniPartner partner = listaPartnera.get(i);
                cbPartneri.addItem(partner);
            }
            

            tblStavkeRacuna.setModel(new StavkaRacunaTableModel(new Racun()));

        } catch (Exception ex) {
            Logger.getLogger(JDUnosRacuna.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void postaviOsluskivacNaTabeli() {
        /*  Postavlja se osluskivac na promenu selekcije u tabeli  */
        tblProizvodi.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                int selektovaniRed = tblProizvodi.getSelectedRow();
                if (selektovaniRed > -1) {
                    ProizvodiTableModel ptm = (ProizvodiTableModel) tblProizvodi.getModel();
                    izabraniProizvod = ptm.vratiProizvod(selektovaniRed);
                    lbProizvod.setText(izabraniProizvod.getNaziv());
                }
            }
        });
    }

    private void validirajINapuniPodatke(Racun r) throws ValidationException {
        
        /*  TODO : napraviti ovu metodu takvom da vrati poruku o svim greskama koje su se desile  */
        boolean validniPodaci = true;
        try{
        r.setBrojRacuna(Integer.parseInt(txtBrojRacuna.getText()));
            System.out.println("defult text border:"+defaultTxtBorder);
        txtBrojRacuna.setBorder(defaultTxtBorder);
        txtBrojRacuna.setSize(txtBrojRacuna.getSize().width, 20);
        }catch(NumberFormatException nfe){
            txtBrojRacuna.setBorder(BorderFactory.createLineBorder(Color.red));
            validniPodaci = false;
        }
        
        
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");        
            r.setDatum(sdf.parse(txtDatum.getText()));
            txtDatum.setBorder(defaultTxtBorder);    
        } catch (ParseException ex) {
            txtDatum.setBorder(BorderFactory.createLineBorder(Color.red));
            validniPodaci = false;
            Logger.getLogger(JDUnosRacuna.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (cbPartneri.getSelectedIndex()<0){
            validniPodaci = false;           
            cbPartneri.setBorder(BorderFactory.createLineBorder(Color.red));
        } else {
            cbPartneri.setBorder(defaultCBBorder);
        }
        
        if (!validniPodaci){
            throw new ValidationException("NEMA PORUKE. IMPLEMENTIRATI");
        }
    }

}
